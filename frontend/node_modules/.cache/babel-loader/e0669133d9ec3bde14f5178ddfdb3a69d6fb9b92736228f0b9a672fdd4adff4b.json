{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leave-management-system\\\\frontend\\\\src\\\\admin\\\\bulkimport.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BulkImport({\n  onClose\n}) {\n  _s();\n  const [parsedUsers, setParsedUsers] = useState([]);\n  const [error, setError] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) {\n      setError(\"Please upload a valid CSV file.\");\n      return;\n    }\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        console.log(results.data);\n        const validUsers = results.data.map(row => {\n          var _row$name, _row$email, _row$position, _row$Manager, _row$password;\n          return {\n            name: (_row$name = row.name) === null || _row$name === void 0 ? void 0 : _row$name.trim(),\n            email: (_row$email = row.email) === null || _row$email === void 0 ? void 0 : _row$email.trim(),\n            position: (_row$position = row.position) === null || _row$position === void 0 ? void 0 : _row$position.trim(),\n            ManagerId: (_row$Manager = row.Manager) === null || _row$Manager === void 0 ? void 0 : _row$Manager.trim(),\n            password: (_row$password = row.password) === null || _row$password === void 0 ? void 0 : _row$password.trim(),\n            isAdmin: row.isAdmin\n          };\n        }).filter(user => user.name && user.email && user.position && user.ManagerId && user.password && user.isAdmin);\n        setParsedUsers(validUsers);\n        setError(\"\");\n        if (validUsers.length == 0) {\n          setError(\"no User to Add\");\n        }\n      },\n      error: () => {\n        setError(\"Failed to parse CSV. Please try again.\");\n      }\n    });\n  };\n  const handleImport = async () => {\n    if (parsedUsers.length > 0) {\n      await axios.post(\"/admin/addUser\", {\n        params: {\n          data: parsedUsers\n        }\n      }).then(response => {\n        console.log(response.data.status);\n        onClose();\n      }).catch(err => {\n        console.log(err);\n      });\n      setParsedUsers([]);\n    } else {\n      setError(\"no users in this file\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-bulk-import\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"admin-upload-label\",\n      children: [\"\\uD83D\\uDCC1 Upload CSV\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        className: \"admin-file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"admin-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), parsedUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Preview (\", parsedUsers.length, \" users):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: parsedUsers.map((user, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \" \\u2014 \", user.position]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-button\",\n        onClick: handleImport,\n        children: \"Import Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(BulkImport, \"syPDw/nTVU2objZb8HQCJNKlrYA=\");\n_c = BulkImport;\nexport default BulkImport;\nvar _c;\n$RefreshReg$(_c, \"BulkImport\");","map":{"version":3,"names":["React","useState","Papa","axios","jsxDEV","_jsxDEV","BulkImport","onClose","_s","parsedUsers","setParsedUsers","error","setError","token","localStorage","getItem","handleFileChange","e","file","target","files","parse","header","skipEmptyLines","complete","results","console","log","data","validUsers","map","row","_row$name","_row$email","_row$position","_row$Manager","_row$password","name","trim","email","position","ManagerId","Manager","password","isAdmin","filter","user","length","handleImport","post","params","then","response","status","catch","err","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","idx","onClick","_c","$RefreshReg$"],"sources":["D:/Leave-management-system/frontend/src/admin/bulkimport.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\n\nfunction BulkImport({ onClose }) {\n  const [parsedUsers, setParsedUsers] = useState([]);\n  const [error, setError] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) {\n      setError(\"Please upload a valid CSV file.\");\n      return;\n    }\n\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        console.log(results.data);\n        const validUsers = results.data\n          .map((row) => ({\n            name: row.name?.trim(),\n            email: row.email?.trim(),\n            position: row.position?.trim(),\n            ManagerId: row.Manager?.trim(),\n            password: row.password?.trim(),\n            isAdmin: row.isAdmin,\n          }))\n          .filter(\n            (user) =>\n              user.name &&\n              user.email &&\n              user.position &&\n              user.ManagerId &&\n              user.password &&\n              user.isAdmin,\n          );\n        setParsedUsers(validUsers);\n        setError(\"\");\n        if (validUsers.length == 0) {\n          setError(\"no User to Add\");\n        }\n      },\n      error: () => {\n        setError(\"Failed to parse CSV. Please try again.\");\n      },\n    });\n  };\n\n  const handleImport = async () => {\n    if (parsedUsers.length > 0) {\n      await axios\n        .post(\"/admin/addUser\", { params: { data: parsedUsers } })\n        .then((response) => {\n          console.log(response.data.status);\n          onClose();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      setParsedUsers([]);\n    } else {\n      setError(\"no users in this file\");\n    }\n  };\n\n  return (\n    <div className=\"admin-bulk-import\">\n      <label className=\"admin-upload-label\">\n        üìÅ Upload CSV\n        <input\n          type=\"file\"\n          onChange={handleFileChange}\n          className=\"admin-file-input\"\n        />\n      </label>\n      {error && <p className=\"admin-error\">{error}</p>}\n\n      {parsedUsers.length > 0 && (\n        <div className=\"admin-preview\">\n          <h4>Preview ({parsedUsers.length} users):</h4>\n          <ul>\n            {parsedUsers.map((user, idx) => (\n              <li key={idx}>\n                {user.name} ‚Äî {user.position}\n              </li>\n            ))}\n          </ul>\n          <button className=\"admin-button\" onClick={handleImport}>\n            Import Users\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default BulkImport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}