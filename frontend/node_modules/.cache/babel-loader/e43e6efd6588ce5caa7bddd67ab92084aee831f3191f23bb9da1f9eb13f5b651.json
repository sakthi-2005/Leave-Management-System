{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SakthikumarAnbazhaga\\\\Downloads\\\\Leave-Request-System\\\\frontend\\\\src\\\\admin\\\\bulkimport.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BulkImport({\n  onBulkAdd\n}) {\n  _s();\n  const [parsedUsers, setParsedUsers] = useState([]);\n  const [error, setError] = useState('');\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file || file.type !== 'text/csv') {\n      setError('Please upload a valid CSV file.');\n      return;\n    }\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        const validUsers = results.data.map(row => {\n          var _row$name, _row$email, _row$position, _row$Manager, _row$password;\n          return {\n            name: (_row$name = row.name) === null || _row$name === void 0 ? void 0 : _row$name.trim(),\n            email: (_row$email = row.email) === null || _row$email === void 0 ? void 0 : _row$email.trim(),\n            position: (_row$position = row.position) === null || _row$position === void 0 ? void 0 : _row$position.trim(),\n            Manager: (_row$Manager = row.Manager) === null || _row$Manager === void 0 ? void 0 : _row$Manager.trim(),\n            password: (_row$password = row.password) === null || _row$password === void 0 ? void 0 : _row$password.trim(),\n            isAdmin: row.isAdmin\n          };\n        }).filter(user => user.name && user.email && user.position && user.Manager && user.password && user.isAdmin);\n        setParsedUsers(validUsers);\n        setError('');\n      },\n      error: () => {\n        setError('Failed to parse CSV. Please try again.');\n      }\n    });\n  };\n  const handleImport = () => {\n    if (parsedUsers.length > 0) {\n      setParsedUsers([]);\n    } else {\n      setError('no user in the file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-bulk-import\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"admin-upload-label\",\n      children: [\"\\uD83D\\uDCC1 Upload CSV\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange,\n        className: \"admin-file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"admin-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), parsedUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Preview (\", parsedUsers.length, \" users):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: parsedUsers.slice(0, 5).map((user, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \" \\u2014 \", user.email, \" \\u2014 \", user.position]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-button\",\n        onClick: handleImport,\n        children: \"Import Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(BulkImport, \"cakWbq9rXfgv1yURXGtA0HNScys=\");\n_c = BulkImport;\nexport default BulkImport;\nvar _c;\n$RefreshReg$(_c, \"BulkImport\");","map":{"version":3,"names":["React","useState","Papa","jsxDEV","_jsxDEV","BulkImport","onBulkAdd","_s","parsedUsers","setParsedUsers","error","setError","handleFileChange","e","file","target","files","type","parse","header","skipEmptyLines","complete","results","validUsers","data","map","row","_row$name","_row$email","_row$position","_row$Manager","_row$password","name","trim","email","position","Manager","password","isAdmin","filter","user","handleImport","length","className","children","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","slice","idx","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SakthikumarAnbazhaga/Downloads/Leave-Request-System/frontend/src/admin/bulkimport.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nfunction BulkImport({ onBulkAdd }) {\r\n  const [parsedUsers, setParsedUsers] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file || file.type !== 'text/csv') {\r\n      setError('Please upload a valid CSV file.');\r\n      return;\r\n    }\r\n\r\n    Papa.parse(file, {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      complete: (results) => {\r\n        const validUsers = results.data\r\n          .map(row => ({\r\n            name: row.name?.trim(),\r\n            email: row.email?.trim(),\r\n            position: row.position?.trim(),\r\n            Manager: row.Manager?.trim(),\r\n            password: row.password?.trim(),\r\n            isAdmin: row.isAdmin\r\n          }))\r\n          .filter(user => user.name && user.email && user.position && user.Manager && user.password && user.isAdmin);\r\n        setParsedUsers(validUsers);\r\n        setError('');\r\n      },\r\n      error: () => {\r\n        setError('Failed to parse CSV. Please try again.');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleImport = () => {\r\n    if (parsedUsers.length > 0) {\r\n      setParsedUsers([]);\r\n    }\r\n    else{\r\n      setError('no user in the file')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-bulk-import\">\r\n      <label className=\"admin-upload-label\">\r\n        üìÅ Upload CSV\r\n        <input\r\n          type=\"file\"\r\n          accept=\".csv\"\r\n          onChange={handleFileChange}\r\n          className=\"admin-file-input\"\r\n        />\r\n      </label>\r\n      {error && <p className=\"admin-error\">{error}</p>}\r\n\r\n      {parsedUsers.length > 0 && (\r\n        <div className=\"admin-preview\">\r\n          <h4>Preview ({parsedUsers.length} users):</h4>\r\n          <ul>\r\n            {parsedUsers.slice(0, 5).map((user, idx) => (\r\n              <li key={idx}>\r\n                {user.name} ‚Äî {user.email} ‚Äî {user.position}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button className=\"admin-button\" onClick={handleImport}>Import Users</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BulkImport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}